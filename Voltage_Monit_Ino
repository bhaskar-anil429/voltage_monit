/////////////////////////////// test code for voltage monitoring ///////////////////////////////
//Include Particle Wire I2C Library
#include <spark_wiring_i2c.h>
int address = 42; // I2C address

void setup()
 {
   Serial.begin(9600);  // Create Serial Object (9600 Baud)
   Wire.begin();
// newcalibration(2,22643); // use this function to set new calibration value
}

/////////////////////////////// number of channels ///////////////////////////////

int channel ()
 {
   Wire.begin();
   Wire.beginTransmission(address); //Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(2);  // Command 2 is used to read no of sensor type, Max current, no of channel
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(254); // CheckSum
   Wire.endTransmission(); // Complete Transmission
   Wire.requestFrom(address, 6);
   int TypeOfSensor =  Wire.read();
   int MaxCurrent =  Wire.read();
   int NoOfChannel =  Wire.read();
   int ExtraByte1 =  Wire.read();
   int ExtraByte2 =  Wire.read();
   int ExtraByte3 =  Wire.read();
   delay(100);
   Wire.endTransmission(); // Complete Transmission
   return NoOfChannel;
 }

/////////////////////////////// maximum current ///////////////////////////////

int MaxCurrent ()
 {
   Wire.begin();
   Wire.beginTransmission(address); // Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(2);  // Command 2 is used to read no of sensor type,Max current,no of channel
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(254); // CheckSum
   Wire.endTransmission(); // Complete Transmission
   Wire.requestFrom(address, 5);
   int TypeOfSensor =  Wire.read();
   int MaxCurrent =  Wire.read();
   int NoOfChannel =  Wire.read();
   int ExtraByte1 =  Wire.read();
   int ExtraByte2 =  Wire.read();
   int ExtraByte3 =  Wire.read();
   delay(100);
   Wire.endTransmission(); // Complete Transmission
   return MaxCurrent;
 }

/////////////////////////////// firmware version ///////////////////////////////

int FirmwareVersion ()
 {
   Wire.begin();
   Wire.beginTransmission(address); //Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(2);  // Command 2 is used to read no of sensor type,Max current,no of channel
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(0);
   Wire.write(254); // CheckSum
   Wire.endTransmission(); // Complete Transmission
   Wire.requestFrom(address, 6);
   int TypeOfSensor =  Wire.read();
   int MaxCurrent =  Wire.read();
   int NoOfChannel =  Wire.read();
   int FirmwareVersion =  Wire.read();
   int ExtraByte2 =  Wire.read();
   int ExtraByte3 =  Wire.read();
   delay(100);
   Wire.endTransmission(); // Complete Transmission
   return FirmwareVersion;
 }

/////////////////////////////// set calibration ///////////////////////////////

int NewCalibration(int Channelno, int calibration_value)
 {
   Serial.print ("Writing new calibration value:  ");
   Wire.beginTransmission(address); // Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(4);  // Command 4 to write calibration value
   Wire.write(Channelno);  // Channel no
   Wire.write(Channelno);  // Channel no
   int MSB = calibration_value/255;
   Wire.write(MSB);
   int LSB = calibration_value & 255;
   Wire.write(LSB);

   Wire.write((146 + 106 + 4 + Channelno + Channelno + MSB + LSB) & 255);
   Wire.endTransmission(); // Complete Transmission
   Serial.println ("\t");
   Serial.print("Calibration Done:  ");
   Serial.println ("\t");
 }

/////////////////////////////// loop ///////////////////////////////

void loop()
{
 int t = channel();
 Serial.print ("No of channel in this product is:  ");
 Serial.println(t);

 int l = MaxCurrent();
 Serial.print ("Max Current Measured by this product is:  ");
 Serial.print(l);
 Serial.print(" ");
 Serial.println("Amp");

 int m = FirmwareVersion();
 Serial.print ("Firmware Version is: ");
 Serial.print ("REV_0.");
 Serial.println (m);
 Serial.println ("Calibration values for all channels are:  ");

/////////////////////////////// calibration value ///////////////////////////////
 for ( byte i = 1; i< t+1; i++)
   {
   Wire.beginTransmission(address); // Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(3);   // Command 3 to read calibration value
   Wire.write(i);   // Channel no
   Wire.write(i);
   Wire.write(0);
   Wire.write(0);
   Wire.write((146 + 106 + 3 + i + i + 0 + 0) & 255); // CheckSum
   Wire.endTransmission(); // Complete Transmission
   Wire.requestFrom(address, 4);
   Serial.print("   ");
   Serial.print(i);
   Serial.print(" = ");
   int MSB = Wire.read();
   int LSB = Wire.read();
   int calibration = (MSB*256)+LSB;
   Serial.println(calibration);
   delay(10);
   Wire.endTransmission(); // Complete Transmission
   }
/////////////////////////////// Voltage ///////////////////////////////
 Serial.println("");
 Serial.println("New updated voltage values are:");
 for ( byte i = 1; i< t+1; i++)
   {
   Wire.beginTransmission(address); // Start communication
   Wire.write(146); // Command header
   Wire.write(106); // Command header
   Wire.write(5);   // Command 5 to read voltage value
   Wire.write(i);   // Start Channel no
   Wire.write(i);   // End Channel no
   Wire.write(0);
   Wire.write(0);
   Wire.write((146 + 106 + 5 + i + i + 0 + 0) & 255); // CheckSum
   Wire.endTransmission(); // Complete Transmission
   Wire.requestFrom(address, 5);
   Serial.print("   ");
   Serial.print(i);
   Serial.print(" = ");
   unsigned long MSB1 = Wire.read();
    MSB1= MSB1*65536;
   unsigned long MSB = Wire.read();
    MSB=MSB*256;
   unsigned long LSB = Wire.read();
    MSB1=MSB1+MSB+LSB;
   double volt = ((double)MSB1)/(double)1000;

   Serial.print(volt,3);
   Serial.print(" ");
   Serial.println("Volt");
   Wire.endTransmission(); // Complete Transmission
   }
 Serial.println("");
 Serial.println("");
 delay(5000);
}
